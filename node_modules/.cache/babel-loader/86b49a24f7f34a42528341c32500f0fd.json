{"ast":null,"code":"var _jsxFileName = \"/Users/mac/Desktop/goit-react-hw-05-movies/src/components/FilmList/FilmList.jsx\",\n    _s = $RefreshSig$();\n\nimport PropTypes from 'prop-types';\nimport { useLocation } from 'react-router-dom';\nimport { FilmListStyled, FilmListItem, FilmLink } from './FilmList.styled';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function FilmList(_ref) {\n  _s();\n\n  let {\n    movies\n  } = _ref;\n  const location = useLocation();\n  const stateData = {\n    backLocation: location\n  };\n  return /*#__PURE__*/_jsxDEV(FilmListStyled, {\n    children: movies.map(movie => /*#__PURE__*/_jsxDEV(FilmListItem, {\n      children: /*#__PURE__*/_jsxDEV(FilmLink, {\n        to: `/movies/${movie.id}`,\n        state: stateData,\n        children: movie.name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 15,\n        columnNumber: 11\n      }, this)\n    }, movie.id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 9\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 12,\n    columnNumber: 5\n  }, this);\n}\n\n_s(FilmList, \"pkHmaVRPskBaU4tMJuJJpV42k1I=\", false, function () {\n  return [useLocation];\n});\n\n_c = FilmList;\nFilmList.propTypes = {\n  movies: PropTypes.arrayOf(PropTypes.shape({\n    id: PropTypes.number.isRequired,\n    name: PropTypes.string.isRequired\n  }))\n};\n\nvar _c;\n\n$RefreshReg$(_c, \"FilmList\");","map":{"version":3,"sources":["/Users/mac/Desktop/goit-react-hw-05-movies/src/components/FilmList/FilmList.jsx"],"names":["PropTypes","useLocation","FilmListStyled","FilmListItem","FilmLink","FilmList","movies","location","stateData","backLocation","map","movie","id","name","propTypes","arrayOf","shape","number","isRequired","string"],"mappings":";;;AAAA,OAAOA,SAAP,MAAsB,YAAtB;AACA,SAASC,WAAT,QAA4B,kBAA5B;AACA,SAASC,cAAT,EAAyBC,YAAzB,EAAuCC,QAAvC,QAAuD,mBAAvD;;AAEA,eAAe,SAASC,QAAT,OAA8B;AAAA;;AAAA,MAAZ;AAAEC,IAAAA;AAAF,GAAY;AAC3C,QAAMC,QAAQ,GAAGN,WAAW,EAA5B;AACA,QAAMO,SAAS,GAAG;AAChBC,IAAAA,YAAY,EAAEF;AADE,GAAlB;AAIA,sBACE,QAAC,cAAD;AAAA,cACGD,MAAM,CAACI,GAAP,CAAWC,KAAK,iBACf,QAAC,YAAD;AAAA,6BACE,QAAC,QAAD;AAAU,QAAA,EAAE,EAAG,WAAUA,KAAK,CAACC,EAAG,EAAlC;AAAqC,QAAA,KAAK,EAAEJ,SAA5C;AAAA,kBACGG,KAAK,CAACE;AADT;AAAA;AAAA;AAAA;AAAA;AADF,OAAmBF,KAAK,CAACC,EAAzB;AAAA;AAAA;AAAA;AAAA,YADD;AADH;AAAA;AAAA;AAAA;AAAA,UADF;AAWD;;GAjBuBP,Q;UACLJ,W;;;KADKI,Q;AAmBxBA,QAAQ,CAACS,SAAT,GAAqB;AACnBR,EAAAA,MAAM,EAAEN,SAAS,CAACe,OAAV,CACNf,SAAS,CAACgB,KAAV,CAAgB;AACdJ,IAAAA,EAAE,EAAEZ,SAAS,CAACiB,MAAV,CAAiBC,UADP;AAEdL,IAAAA,IAAI,EAAEb,SAAS,CAACmB,MAAV,CAAiBD;AAFT,GAAhB,CADM;AADW,CAArB","sourcesContent":["import PropTypes from 'prop-types';\nimport { useLocation } from 'react-router-dom';\nimport { FilmListStyled, FilmListItem, FilmLink } from './FilmList.styled';\n\nexport default function FilmList({ movies }) {\n  const location = useLocation();\n  const stateData = {\n    backLocation: location,\n  };\n\n  return (\n    <FilmListStyled>\n      {movies.map(movie => (\n        <FilmListItem key={movie.id}>\n          <FilmLink to={`/movies/${movie.id}`} state={stateData}>\n            {movie.name}\n          </FilmLink>\n        </FilmListItem>\n      ))}\n    </FilmListStyled>\n  );\n}\n\nFilmList.propTypes = {\n  movies: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.number.isRequired,\n      name: PropTypes.string.isRequired,\n    })\n  ),\n};"]},"metadata":{},"sourceType":"module"}