{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport { useParams } from 'react-router-dom';\nimport { useState, useEffect } from 'react';\nimport * as API from '../service/api';\nexport default function UseFetchReviews() {\n  _s();\n\n  const {\n    movieId\n  } = useParams();\n  const [reviews, setReviews] = useState([]);\n  useEffect(() => {\n    API.getMovieReviews(movieId).then(_ref => {\n      let {\n        results\n      } = _ref;\n      const reviewsArr = results.map(_ref2 => {\n        let {\n          id,\n          author,\n          content\n        } = _ref2;\n        return {\n          id,\n          author,\n          content\n        };\n      });\n      setReviews(reviewsArr);\n    });\n  }, [movieId]);\n  return reviews;\n}\n\n_s(UseFetchReviews, \"tE9IYNGCem0GPPIw2fRHsfSTlmg=\", false, function () {\n  return [useParams];\n});\n\n_c = UseFetchReviews;\n\nvar _c;\n\n$RefreshReg$(_c, \"UseFetchReviews\");","map":{"version":3,"sources":["/Users/mac/Desktop/goit-react-hw-05-movies/src/hook/UseFetchReviews.js"],"names":["useParams","useState","useEffect","API","UseFetchReviews","movieId","reviews","setReviews","getMovieReviews","then","results","reviewsArr","map","id","author","content"],"mappings":";;AAAA,SAASA,SAAT,QAA0B,kBAA1B;AACA,SAASC,QAAT,EAAmBC,SAAnB,QAAoC,OAApC;AACA,OAAO,KAAKC,GAAZ,MAAqB,gBAArB;AAEA,eAAe,SAASC,eAAT,GAA2B;AAAA;;AACxC,QAAM;AAAEC,IAAAA;AAAF,MAAcL,SAAS,EAA7B;AACA,QAAM,CAACM,OAAD,EAAUC,UAAV,IAAwBN,QAAQ,CAAC,EAAD,CAAtC;AAEAC,EAAAA,SAAS,CAAC,MAAM;AACdC,IAAAA,GAAG,CAACK,eAAJ,CAAoBH,OAApB,EAA6BI,IAA7B,CAAkC,QAAiB;AAAA,UAAhB;AAAEC,QAAAA;AAAF,OAAgB;AACjD,YAAMC,UAAU,GAAGD,OAAO,CAACE,GAAR,CAAY;AAAA,YAAC;AAAEC,UAAAA,EAAF;AAAMC,UAAAA,MAAN;AAAcC,UAAAA;AAAd,SAAD;AAAA,eAA8B;AAC3DF,UAAAA,EAD2D;AAE3DC,UAAAA,MAF2D;AAG3DC,UAAAA;AAH2D,SAA9B;AAAA,OAAZ,CAAnB;AAKAR,MAAAA,UAAU,CAACI,UAAD,CAAV;AACD,KAPD;AAQD,GATQ,EASN,CAACN,OAAD,CATM,CAAT;AAWA,SAAOC,OAAP;AACD;;GAhBuBF,e;UACFJ,S;;;KADEI,e","sourcesContent":["import { useParams } from 'react-router-dom';\nimport { useState, useEffect } from 'react';\nimport * as API from '../service/api';\n\nexport default function UseFetchReviews() {\n  const { movieId } = useParams();\n  const [reviews, setReviews] = useState([]);\n\n  useEffect(() => {\n    API.getMovieReviews(movieId).then(({ results }) => {\n      const reviewsArr = results.map(({ id, author, content }) => ({\n        id,\n        author,\n        content,\n      }));\n      setReviews(reviewsArr);\n    });\n  }, [movieId]);\n\n  return reviews;\n}"]},"metadata":{},"sourceType":"module"}