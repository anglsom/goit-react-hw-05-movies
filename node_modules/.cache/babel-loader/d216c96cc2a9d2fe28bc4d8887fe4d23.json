{"ast":null,"code":"import notImage from'../../images/no-image-available.png';import{CastingList,CastItem,ImageContainer,ActorImage,ActorsInfo,ActorsInfoName}from'./Actors.styled';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";export default function Actors(_ref){var cast=_ref.cast;return/*#__PURE__*/_jsx(CastingList,{children:cast.map(function(_ref2){var id=_ref2.id,character=_ref2.character,name=_ref2.name,profile_path=_ref2.profile_path;return/*#__PURE__*/_jsxs(CastItem,{children:[/*#__PURE__*/_jsx(ImageContainer,{children:/*#__PURE__*/_jsx(ActorImage,{src:profile_path?\"https://image.tmdb.org/t/p/w500/\".concat(profile_path):notImage,alt:character})}),/*#__PURE__*/_jsxs(ActorsInfo,{children:[/*#__PURE__*/_jsx(ActorsInfoName,{children:\"Actors name:\"}),/*#__PURE__*/_jsx(\"p\",{children:name}),/*#__PURE__*/_jsx(ActorsInfoName,{children:\"Character: \"}),/*#__PURE__*/_jsx(\"p\",{children:character})]})]},id);})});}","map":{"version":3,"sources":["/Users/mac/Desktop/goit-react-hw-05-movies/src/components/Actors/Actors.jsx"],"names":["notImage","CastingList","CastItem","ImageContainer","ActorImage","ActorsInfo","ActorsInfoName","Actors","cast","map","id","character","name","profile_path"],"mappings":"AACA,MAAOA,CAAAA,QAAP,KAAqB,qCAArB,CACA,OACEC,WADF,CAEEC,QAFF,CAGEC,cAHF,CAIEC,UAJF,CAKEC,UALF,CAMEC,cANF,KAOO,iBAPP,C,wFASA,cAAe,SAASC,CAAAA,MAAT,MAA0B,IAARC,CAAAA,IAAQ,MAARA,IAAQ,CACvC,mBACE,KAAC,WAAD,WACGA,IAAI,CAACC,GAAL,CAAS,mBAAGC,CAAAA,EAAH,OAAGA,EAAH,CAAOC,SAAP,OAAOA,SAAP,CAAkBC,IAAlB,OAAkBA,IAAlB,CAAwBC,YAAxB,OAAwBA,YAAxB,oBACR,MAAC,QAAD,yBACE,KAAC,cAAD,wBACE,KAAC,UAAD,EACE,GAAG,CACDA,YAAY,2CAC2BA,YAD3B,EAERb,QAJR,CAME,GAAG,CAAEW,SANP,EADF,EADF,cAWE,MAAC,UAAD,yBACE,KAAC,cAAD,2BADF,cAEE,mBAAIC,IAAJ,EAFF,cAGE,KAAC,cAAD,0BAHF,cAIE,mBAAID,SAAJ,EAJF,GAXF,GAAeD,EAAf,CADQ,EAAT,CADH,EADF,CAwBD","sourcesContent":["import PropTypes from 'prop-types';\nimport notImage from '../../images/no-image-available.png';\nimport {\n  CastingList,\n  CastItem,\n  ImageContainer,\n  ActorImage,\n  ActorsInfo,\n  ActorsInfoName,\n} from './Actors.styled';\n\nexport default function Actors({ cast }) {\n  return (\n    <CastingList>\n      {cast.map(({ id, character, name, profile_path }) => (\n        <CastItem key={id}>\n          <ImageContainer>\n            <ActorImage\n              src={\n                profile_path\n                  ? `https://image.tmdb.org/t/p/w500/${profile_path}`\n                  : notImage\n              }\n              alt={character}\n            />\n          </ImageContainer>\n          <ActorsInfo>\n            <ActorsInfoName>Actors name:</ActorsInfoName>\n            <p>{name}</p>\n            <ActorsInfoName>Character: </ActorsInfoName>\n            <p>{character}</p>\n          </ActorsInfo>\n        </CastItem>\n      ))}\n    </CastingList>\n  );\n}\n\nActors.propTypes = {\n  cast: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.number.isRequired,\n      character: PropTypes.string.isRequired,\n      name: PropTypes.string.isRequired,\n      profile_path: PropTypes.string,\n    })\n  ),\n};"]},"metadata":{},"sourceType":"module"}