{"ast":null,"code":"var _jsxFileName = \"/Users/mac/Desktop/goit-react-hw-05-movies/src/components/Film/Film.jsx\",\n    _s = $RefreshSig$();\n\nimport PropTypes from 'prop-types';\nimport { useLocation } from 'react-router-dom';\nimport placeholder from '../../images/imdbnoimage.jpeg';\nimport { QueryList, QueryListItem, QueryImage, MovieLink, MovieInfo } from './Film.styled';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Film(_ref) {\n  _s();\n\n  let {\n    movies\n  } = _ref;\n  const location = useLocation();\n  const stateData = {\n    backLocation: location\n  };\n  return /*#__PURE__*/_jsxDEV(QueryList, {\n    children: movies.map(_ref2 => {\n      let {\n        id,\n        title,\n        img,\n        vote_average\n      } = _ref2;\n      return /*#__PURE__*/_jsxDEV(QueryListItem, {\n        children: /*#__PURE__*/_jsxDEV(MovieLink, {\n          to: `/movies/${id}`,\n          state: stateData,\n          children: [/*#__PURE__*/_jsxDEV(QueryImage, {\n            src: img ? `https://image.tmdb.org/t/p/w500/${img}` : placeholder,\n            alt: title\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 25,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(MovieInfo, {\n            children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n              children: title\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 32,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: [\"Vote average: \", vote_average]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 33,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 31,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 24,\n          columnNumber: 13\n        }, this)\n      }, id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 11\n      }, this);\n    })\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 20,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Film, \"pkHmaVRPskBaU4tMJuJJpV42k1I=\", false, function () {\n  return [useLocation];\n});\n\n_c = Film;\nFilm.propTypes = {\n  movies: PropTypes.arrayOf(PropTypes.shape({\n    id: PropTypes.number.isRequired,\n    title: PropTypes.string.isRequired,\n    img: PropTypes.string,\n    vote_average: PropTypes.number\n  }))\n};\n\nvar _c;\n\n$RefreshReg$(_c, \"Film\");","map":{"version":3,"sources":["/Users/mac/Desktop/goit-react-hw-05-movies/src/components/Film/Film.jsx"],"names":["PropTypes","useLocation","placeholder","QueryList","QueryListItem","QueryImage","MovieLink","MovieInfo","Film","movies","location","stateData","backLocation","map","id","title","img","vote_average","propTypes","arrayOf","shape","number","isRequired","string"],"mappings":";;;AAAA,OAAOA,SAAP,MAAsB,YAAtB;AACA,SAASC,WAAT,QAA4B,kBAA5B;AACA,OAAOC,WAAP,MAAwB,+BAAxB;AACA,SACEC,SADF,EAEEC,aAFF,EAGEC,UAHF,EAIEC,SAJF,EAKEC,SALF,QAMO,eANP;;AAQA,eAAe,SAASC,IAAT,OAA0B;AAAA;;AAAA,MAAZ;AAAEC,IAAAA;AAAF,GAAY;AACvC,QAAMC,QAAQ,GAAGT,WAAW,EAA5B;AAEA,QAAMU,SAAS,GAAG;AAChBC,IAAAA,YAAY,EAAEF;AADE,GAAlB;AAIA,sBACE,QAAC,SAAD;AAAA,cACGD,MAAM,CAACI,GAAP,CAAW,SAAsC;AAAA,UAArC;AAAEC,QAAAA,EAAF;AAAMC,QAAAA,KAAN;AAAaC,QAAAA,GAAb;AAAkBC,QAAAA;AAAlB,OAAqC;AAChD,0BACE,QAAC,aAAD;AAAA,+BACE,QAAC,SAAD;AAAW,UAAA,EAAE,EAAG,WAAUH,EAAG,EAA7B;AAAgC,UAAA,KAAK,EAAEH,SAAvC;AAAA,kCACE,QAAC,UAAD;AACE,YAAA,GAAG,EACDK,GAAG,GAAI,mCAAkCA,GAAI,EAA1C,GAA8Cd,WAFrD;AAIE,YAAA,GAAG,EAAEa;AAJP;AAAA;AAAA;AAAA;AAAA,kBADF,eAOE,QAAC,SAAD;AAAA,oCACE;AAAA,wBAAKA;AAAL;AAAA;AAAA;AAAA;AAAA,oBADF,eAEE;AAAA,2CAAkBE,YAAlB;AAAA;AAAA;AAAA;AAAA;AAAA,oBAFF;AAAA;AAAA;AAAA;AAAA;AAAA,kBAPF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF,SAAoBH,EAApB;AAAA;AAAA;AAAA;AAAA,cADF;AAgBD,KAjBA;AADH;AAAA;AAAA;AAAA;AAAA,UADF;AAsBD;;GA7BuBN,I;UACLP,W;;;KADKO,I;AA+BxBA,IAAI,CAACU,SAAL,GAAiB;AACfT,EAAAA,MAAM,EAAET,SAAS,CAACmB,OAAV,CACNnB,SAAS,CAACoB,KAAV,CAAgB;AACdN,IAAAA,EAAE,EAAEd,SAAS,CAACqB,MAAV,CAAiBC,UADP;AAEdP,IAAAA,KAAK,EAAEf,SAAS,CAACuB,MAAV,CAAiBD,UAFV;AAGdN,IAAAA,GAAG,EAAEhB,SAAS,CAACuB,MAHD;AAIdN,IAAAA,YAAY,EAAEjB,SAAS,CAACqB;AAJV,GAAhB,CADM;AADO,CAAjB","sourcesContent":["import PropTypes from 'prop-types';\nimport { useLocation } from 'react-router-dom';\nimport placeholder from '../../images/imdbnoimage.jpeg';\nimport {\n  QueryList,\n  QueryListItem,\n  QueryImage,\n  MovieLink,\n  MovieInfo,\n} from './Film.styled';\n\nexport default function Film({ movies }) {\n  const location = useLocation();\n\n  const stateData = {\n    backLocation: location,\n  };\n\n  return (\n    <QueryList>\n      {movies.map(({ id, title, img, vote_average }) => {\n        return (\n          <QueryListItem key={id}>\n            <MovieLink to={`/movies/${id}`} state={stateData}>\n              <QueryImage\n                src={\n                  img ? `https://image.tmdb.org/t/p/w500/${img}` : placeholder\n                }\n                alt={title}\n              />\n              <MovieInfo>\n                <h3>{title}</h3>\n                <p>Vote average: {vote_average}</p>\n              </MovieInfo>\n            </MovieLink>\n          </QueryListItem>\n        );\n      })}\n    </QueryList>\n  );\n}\n\nFilm.propTypes = {\n  movies: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.number.isRequired,\n      title: PropTypes.string.isRequired,\n      img: PropTypes.string,\n      vote_average: PropTypes.number,\n    })\n  ),\n};"]},"metadata":{},"sourceType":"module"}