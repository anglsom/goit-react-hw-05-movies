{"ast":null,"code":"var _jsxFileName = \"/Users/mac/Desktop/goit-react-hw-05-movies/src/components/Actors/Actors.jsx\";\nimport PropTypes from 'prop-types';\nimport notImage from '../../images/no-image-available.png';\nimport { CastingList, CastItem, ImageContainer, ActorImage, ActorsInfo, ActorsInfoName } from './Actors.styled';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Actors(_ref) {\n  let {\n    cast\n  } = _ref;\n  return /*#__PURE__*/_jsxDEV(CastingList, {\n    children: cast.map(_ref2 => {\n      let {\n        id,\n        character,\n        name,\n        profile_path\n      } = _ref2;\n      return /*#__PURE__*/_jsxDEV(CastItem, {\n        children: [/*#__PURE__*/_jsxDEV(ImageContainer, {\n          children: /*#__PURE__*/_jsxDEV(ActorImage, {\n            src: profile_path ? `https://image.tmdb.org/t/p/w500/${profile_path}` : notImage,\n            alt: character\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 18,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 17,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(ActorsInfo, {\n          children: [/*#__PURE__*/_jsxDEV(ActorsInfoName, {\n            children: \"Actors name:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 28,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 29,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(ActorsInfoName, {\n            children: \"Character: \"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 30,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: character\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 31,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 27,\n          columnNumber: 11\n        }, this)]\n      }, id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 16,\n        columnNumber: 9\n      }, this);\n    })\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 14,\n    columnNumber: 5\n  }, this);\n}\n_c = Actors;\nActors.propTypes = {\n  cast: PropTypes.arrayOf(PropTypes.shape({\n    id: PropTypes.number.isRequired,\n    character: PropTypes.string.isRequired,\n    name: PropTypes.string.isRequired,\n    profile_path: PropTypes.string\n  }))\n};\n\nvar _c;\n\n$RefreshReg$(_c, \"Actors\");","map":{"version":3,"sources":["/Users/mac/Desktop/goit-react-hw-05-movies/src/components/Actors/Actors.jsx"],"names":["PropTypes","notImage","CastingList","CastItem","ImageContainer","ActorImage","ActorsInfo","ActorsInfoName","Actors","cast","map","id","character","name","profile_path","propTypes","arrayOf","shape","number","isRequired","string"],"mappings":";AAAA,OAAOA,SAAP,MAAsB,YAAtB;AACA,OAAOC,QAAP,MAAqB,qCAArB;AACA,SACEC,WADF,EAEEC,QAFF,EAGEC,cAHF,EAIEC,UAJF,EAKEC,UALF,EAMEC,cANF,QAOO,iBAPP;;AASA,eAAe,SAASC,MAAT,OAA0B;AAAA,MAAV;AAAEC,IAAAA;AAAF,GAAU;AACvC,sBACE,QAAC,WAAD;AAAA,cACGA,IAAI,CAACC,GAAL,CAAS;AAAA,UAAC;AAAEC,QAAAA,EAAF;AAAMC,QAAAA,SAAN;AAAiBC,QAAAA,IAAjB;AAAuBC,QAAAA;AAAvB,OAAD;AAAA,0BACR,QAAC,QAAD;AAAA,gCACE,QAAC,cAAD;AAAA,iCACE,QAAC,UAAD;AACE,YAAA,GAAG,EACDA,YAAY,GACP,mCAAkCA,YAAa,EADxC,GAERb,QAJR;AAME,YAAA,GAAG,EAAEW;AANP;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,gBADF,eAWE,QAAC,UAAD;AAAA,kCACE,QAAC,cAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADF,eAEE;AAAA,sBAAIC;AAAJ;AAAA;AAAA;AAAA;AAAA,kBAFF,eAGE,QAAC,cAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAHF,eAIE;AAAA,sBAAID;AAAJ;AAAA;AAAA;AAAA;AAAA,kBAJF;AAAA;AAAA;AAAA;AAAA;AAAA,gBAXF;AAAA,SAAeD,EAAf;AAAA;AAAA;AAAA;AAAA,cADQ;AAAA,KAAT;AADH;AAAA;AAAA;AAAA;AAAA,UADF;AAwBD;KAzBuBH,M;AA2BxBA,MAAM,CAACO,SAAP,GAAmB;AACjBN,EAAAA,IAAI,EAAET,SAAS,CAACgB,OAAV,CACJhB,SAAS,CAACiB,KAAV,CAAgB;AACdN,IAAAA,EAAE,EAAEX,SAAS,CAACkB,MAAV,CAAiBC,UADP;AAEdP,IAAAA,SAAS,EAAEZ,SAAS,CAACoB,MAAV,CAAiBD,UAFd;AAGdN,IAAAA,IAAI,EAAEb,SAAS,CAACoB,MAAV,CAAiBD,UAHT;AAIdL,IAAAA,YAAY,EAAEd,SAAS,CAACoB;AAJV,GAAhB,CADI;AADW,CAAnB","sourcesContent":["import PropTypes from 'prop-types';\nimport notImage from '../../images/no-image-available.png';\nimport {\n  CastingList,\n  CastItem,\n  ImageContainer,\n  ActorImage,\n  ActorsInfo,\n  ActorsInfoName,\n} from './Actors.styled';\n\nexport default function Actors({ cast }) {\n  return (\n    <CastingList>\n      {cast.map(({ id, character, name, profile_path }) => (\n        <CastItem key={id}>\n          <ImageContainer>\n            <ActorImage\n              src={\n                profile_path\n                  ? `https://image.tmdb.org/t/p/w500/${profile_path}`\n                  : notImage\n              }\n              alt={character}\n            />\n          </ImageContainer>\n          <ActorsInfo>\n            <ActorsInfoName>Actors name:</ActorsInfoName>\n            <p>{name}</p>\n            <ActorsInfoName>Character: </ActorsInfoName>\n            <p>{character}</p>\n          </ActorsInfo>\n        </CastItem>\n      ))}\n    </CastingList>\n  );\n}\n\nActors.propTypes = {\n  cast: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.number.isRequired,\n      character: PropTypes.string.isRequired,\n      name: PropTypes.string.isRequired,\n      profile_path: PropTypes.string,\n    })\n  ),\n};"]},"metadata":{},"sourceType":"module"}