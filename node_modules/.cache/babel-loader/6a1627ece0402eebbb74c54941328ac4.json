{"ast":null,"code":"import noPoster from'../../images/imdbnoimage.jpeg';import{MovieInfo,MovieImage,MovieDetails,MovieInfoName}from'./Card.styled';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";export default function Card(_ref){var data=_ref.data;var img=data.img,title=data.title,vote_average=data.vote_average,overview=data.overview,genres=data.genres,release_date=data.release_date;return/*#__PURE__*/_jsxs(MovieDetails,{children:[/*#__PURE__*/_jsx(MovieImage,{src:img?\"https://image.tmdb.org/t/p/w500/\".concat(img):noPoster,alt:title}),/*#__PURE__*/_jsxs(MovieInfo,{children:[/*#__PURE__*/_jsx(MovieInfoName,{children:\"Vote average:\"}),/*#__PURE__*/_jsx(\"p\",{children:vote_average}),/*#__PURE__*/_jsx(MovieInfoName,{children:\"Overview:\"}),/*#__PURE__*/_jsx(\"p\",{children:overview}),/*#__PURE__*/_jsx(MovieInfoName,{children:\"Genres:\"}),/*#__PURE__*/_jsx(\"p\",{children:genres.map(function(el){return el.name;}).join(', ')}),/*#__PURE__*/_jsx(MovieInfoName,{children:\"Release date:\"}),/*#__PURE__*/_jsx(\"p\",{children:release_date})]})]});}","map":{"version":3,"sources":["/Users/mac/Desktop/goit-react-hw-05-movies/src/components/Card/Card.jsx"],"names":["noPoster","MovieInfo","MovieImage","MovieDetails","MovieInfoName","Card","data","img","title","vote_average","overview","genres","release_date","map","el","name","join"],"mappings":"AACA,MAAOA,CAAAA,QAAP,KAAqB,+BAArB,CAEA,OACEC,SADF,CAEEC,UAFF,CAGEC,YAHF,CAIEC,aAJF,KAKO,eALP,C,wFAOA,cAAe,SAASC,CAAAA,IAAT,MAAwB,IAARC,CAAAA,IAAQ,MAARA,IAAQ,CACrC,GAAQC,CAAAA,GAAR,CAAqED,IAArE,CAAQC,GAAR,CAAaC,KAAb,CAAqEF,IAArE,CAAaE,KAAb,CAAoBC,YAApB,CAAqEH,IAArE,CAAoBG,YAApB,CAAkCC,QAAlC,CAAqEJ,IAArE,CAAkCI,QAAlC,CAA4CC,MAA5C,CAAqEL,IAArE,CAA4CK,MAA5C,CAAoDC,YAApD,CAAqEN,IAArE,CAAoDM,YAApD,CAEA,mBACE,MAAC,YAAD,yBACE,KAAC,UAAD,EACE,GAAG,CAAEL,GAAG,2CAAsCA,GAAtC,EAA8CP,QADxD,CAEE,GAAG,CAAEQ,KAFP,EADF,cAKE,MAAC,SAAD,yBACE,KAAC,aAAD,4BADF,cAEE,mBAAIC,YAAJ,EAFF,cAGE,KAAC,aAAD,wBAHF,cAIE,mBAAIC,QAAJ,EAJF,cAKE,KAAC,aAAD,sBALF,cAME,mBAAIC,MAAM,CAACE,GAAP,CAAW,SAAAC,EAAE,QAAIA,CAAAA,EAAE,CAACC,IAAP,EAAb,EAA0BC,IAA1B,CAA+B,IAA/B,CAAJ,EANF,cAOE,KAAC,aAAD,4BAPF,cAQE,mBAAIJ,YAAJ,EARF,GALF,GADF,CAkBD","sourcesContent":["import PropTypes from 'prop-types';\nimport noPoster from '../../images/imdbnoimage.jpeg';\n\nimport {\n  MovieInfo,\n  MovieImage,\n  MovieDetails,\n  MovieInfoName,\n} from './Card.styled';\n\nexport default function Card({ data }) {\n  const { img, title, vote_average, overview, genres, release_date } = data;\n\n  return (\n    <MovieDetails>\n      <MovieImage\n        src={img ? `https://image.tmdb.org/t/p/w500/${img}` : noPoster}\n        alt={title}\n      />\n      <MovieInfo>\n        <MovieInfoName>Vote average:</MovieInfoName>\n        <p>{vote_average}</p>\n        <MovieInfoName>Overview:</MovieInfoName>\n        <p>{overview}</p>\n        <MovieInfoName>Genres:</MovieInfoName>\n        <p>{genres.map(el => el.name).join(', ')}</p>\n        <MovieInfoName>Release date:</MovieInfoName>\n        <p>{release_date}</p>\n      </MovieInfo>\n    </MovieDetails>\n  );\n}\n\nCard.propTypes = {\n  data: PropTypes.shape({\n    img: PropTypes.string.isRequired,\n    vote_average: PropTypes.number.isRequired,\n    overview: PropTypes.string.isRequired,\n    title: PropTypes.string.isRequired,\n    release_date: PropTypes.string.isRequired,\n    genres: PropTypes.arrayOf(PropTypes.object.isRequired),\n  }),\n};"]},"metadata":{},"sourceType":"module"}