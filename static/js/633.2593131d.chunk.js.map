{"version":3,"file":"static/js/633.2593131d.chunk.js","mappings":"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","sources":["components/Card/Card.styled.js","components/Card/Card.jsx","components/MyInfo/MyInfo.styled.js","components/MyInfo/MyInfo.jsx","components/Button/Button.styled.js","components/Button/Button.jsx","page/Details.js","service/api.js"],"sourcesContent":["import styled from 'styled-components';\n\nexport const MovieInfo = styled.div`\n  padding: 30px;\n  font-weight: 500;\n  color: #2a363b;\n  font-size: 16px;\n  max-width: 500px;\n`;\n\nexport const MovieImage = styled.img`\n  max-width: 300px;\n`;\n\nexport const MovieDetails = styled.div`\n  display: flex;\n  margin-bottom: 20px;\n`;\n\nexport const MovieInfoName = styled.div`\n  font-weight: 700;\n  font-size: 18px;\n`;","import PropTypes from 'prop-types';\nimport noPoster from '../../images/imdbnoimage.jpeg';\n\nimport {\n  MovieInfo,\n  MovieImage,\n  MovieDetails,\n  MovieInfoName,\n} from './Card.styled';\n\nexport default function Card({ data }) {\n  const { img, title, vote_average, overview, genres, release_date } = data;\n\n  return (\n    <MovieDetails>\n      <MovieImage\n        src={img ? `https://image.tmdb.org/t/p/w500/${img}` : noPoster}\n        alt={title}\n      />\n      <MovieInfo>\n        <MovieInfoName>Vote average:</MovieInfoName>\n        <p>{vote_average}</p>\n        <MovieInfoName>Overview:</MovieInfoName>\n        <p>{overview}</p>\n        <MovieInfoName>Genres:</MovieInfoName>\n        <p>{genres.map(el => el.name).join(', ')}</p>\n        <MovieInfoName>Release date:</MovieInfoName>\n        <p>{release_date}</p>\n      </MovieInfo>\n    </MovieDetails>\n  );\n}\n\nCard.propTypes = {\n  data: PropTypes.shape({\n    img: PropTypes.string.isRequired,\n    vote_average: PropTypes.number.isRequired,\n    overview: PropTypes.string.isRequired,\n    title: PropTypes.string.isRequired,\n    release_date: PropTypes.string.isRequired,\n    genres: PropTypes.arrayOf(PropTypes.object.isRequired),\n  }),\n};","import styled from 'styled-components';\nimport { NavLink } from 'react-router-dom';\n\nexport const Navigation = styled(NavLink)`\n  display: inline-block;\n  text-decoration: none;\n  padding: 12px;\n  font-weight: 500;\n  color: #2a363b;\n  font-size: 16px;\n  &.active {\n    color: plum;\n  }\n`;","import PropTypes from 'prop-types';\nimport { Navigation } from './MyInfo.styled';\n\nexport default function MyInfo({ backLocation }) {\n  return (\n    <>\n      <hr />\n      <h4>Additional information</h4>\n      <Navigation to={`cast`} state={{ backLocation }}>\n        Cast\n          </Navigation>\n      <Navigation to={`reviews`} state={{ backLocation }}>\n        Reviews\n      </Navigation>\n    </>\n  );\n}\n\nMyInfo.propTypes = {\n  backLocation: PropTypes.object.isRequired,\n};","import styled from 'styled-components';\n\nexport const ButtonStyle = styled.button`\n  margin-bottom: 20px;\n  padding: 5px 10px;\n  background-color: plum;\n  color: black;\n  border: none;\n  &:hover {\n    background-color: pink;\n    color: white;\n  }\n`;","import { useNavigate } from 'react-router-dom';\nimport { ButtonStyle }  from './Button.styled';\n\nexport default function Button({ backLocation }) {\n  const navigate = useNavigate();\n\n  return (\n    <ButtonStyle type=\"button\" onClick={() => navigate(backLocation ?? '/')}>\n      Go back\n    </ButtonStyle>\n  );\n}","import { useState, useEffect } from 'react';\nimport { Outlet, useLocation, useParams } from 'react-router-dom';\nimport * as API from '../service/api';\nimport Card from 'components/Card';\nimport MyInfo from 'components/MyInfo';\nimport Button from 'components/Button';\nimport Notiflix from 'notiflix';\n\nexport default function Details() {\n  const { movieId } = useParams();\n  const location = useLocation();\n  const backLocation = location?.state?.backLocation;\n\n  const [movie, setMovie] = useState(null);\n\n  useEffect(() => {\n    API.getMovieDetails(movieId)\n      .then(response => {\n        const {\n          poster_path,\n          title,\n          name,\n          vote_average,\n          overview,\n          genres,\n          backdrop_path,\n          release_date,\n        } = response;\n\n        const movieDetails = {\n          img: poster_path ?? backdrop_path,\n          title: title ?? name,\n          vote_average,\n          overview,\n          genres,\n          release_date,\n        };\n\n        setMovie(movieDetails);\n      })\n      .catch(error => {\n        Notiflix.Notify.warning('Sorry, there are no details about this film');\n      });\n  }, [movieId]);\n\n  return (\n    <>\n      {movie ? (\n        <>\n          <Button backLocation={backLocation} />\n\n          <div>\n            <Card data={movie} />\n            <MyInfo backLocation={backLocation} />\n          </div>\n\n          <Outlet />\n        </>\n      ) : (\n        <Button backLocation={backLocation} />\n      )}\n    </>\n  );\n}","import axios from 'axios';\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3/';\nconst ApiKey = '71232cc02b0a0eb890148f92fc2f7287';\n\nexport async function getTrending() {\n  const response = await axios.get(`trending/all/day?api_key=${ApiKey}`);\n  return response.data;\n}\n\nexport async function getMovieDetails(id) {\n  const response = await axios.get(`movie/${id}?api_key=${ApiKey}`);\n  return response.data;\n}\n\nexport async function getMovieCast(id) {\n  const response = await axios.get(\n    `movie/${id}/credits?api_key=${ApiKey}&language=en-US`\n  );\n  return response.data;\n}\n\nexport async function getMovieReviews(id) {\n  const response = await axios.get(\n    `movie/${id}/reviews?api_key=${ApiKey}&language=en-US`\n  );\n  return response.data;\n}\n\nexport async function getMovieByQuery(query) {\n  const response = await axios.get(\n    `search/movie?api_key=${ApiKey}&query=${query}&page=1`\n  );\n  return response.data;\n}"],"names":["MovieInfo","styled","MovieImage","MovieDetails","MovieInfoName","Card","data","img","title","vote_average","overview","genres","release_date","src","noPoster","alt","map","el","name","join","Navigation","NavLink","MyInfo","backLocation","to","state","ButtonStyle","Button","navigate","useNavigate","type","onClick","Details","movieId","useParams","location","useLocation","useState","movie","setMovie","useEffect","API","then","response","poster_path","backdrop_path","catch","error","Notiflix","axios","ApiKey","getTrending","getMovieDetails","id","getMovieCast","getMovieReviews","getMovieByQuery","query"],"sourceRoot":""}