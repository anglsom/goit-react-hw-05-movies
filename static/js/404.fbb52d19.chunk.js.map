{"version":3,"file":"static/js/404.fbb52d19.chunk.js","mappings":"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","sources":["components/Search/Search.styled.js","components/Search/Search.jsx","components/Film/Film.styled.js","components/Film/Film.jsx","page/Movies.js","service/api.js"],"sourcesContent":["import styled from 'styled-components';\n\nexport const Button = styled.button`\n  padding: 7px 10px;\n  background-color: plum;\n  color: black;\n  border: none;\n  &:hover {\n    background-color: pink;\n    color: white;\n  }\n`;\nexport const Input = styled.input`\n  padding: 5px 10px;\n  outline: none;\n`;\n\nexport const Form = styled.form`\n  margin-bottom: 30px;\n`;","import { useState } from 'react';\nimport Notiflix from 'notiflix';\nimport { useSearchParams } from 'react-router-dom';\nimport { Form, Button, Input } from './Search.styled';\n\nexport default function Search() {\n  let [, setSearchParams] = useSearchParams({});\n  const [searchInput, setSearchInput] = useState('');\n\n  const handleFormSubmit = e => {\n    e.preventDefault();\n\n    if (searchInput.trim() === '') {\n      Notiflix.Notify.failure('Please enter a search term!');\n      return;\n    }\n\n    setSearchParams({ query: `${searchInput}` });\n    setSearchInput('');\n  };\n\n  const handleChange = e => {\n    setSearchInput(e.target.value.toLowerCase());\n  };\n\n  return (\n    <>\n      <Form onSubmit={handleFormSubmit}>\n        <Input\n          type=\"text\"\n          value={searchInput}\n          autoComplete=\"off\"\n          autoFocus\n          onChange={handleChange}\n        />\n        <Button type=\"submit\">Search</Button>\n      </Form>\n    </>\n  );\n}","import styled from 'styled-components';\nimport { Link } from 'react-router-dom';\n\nexport const QueryList = styled.ul`\n  display: flex;\n  flex-wrap: wrap;\n  list-style: none;\n  margin: -5px;\n`;\n\nexport const QueryListItem = styled.li`\n  max-width: 200px;\n  border: 1px solid skyblue;\n  border-radius: 5px;\n  margin: 10px;\n`;\n\nexport const QueryImage = styled.img`\n  max-width: 200px;\n`;\n\nexport const MovieLink = styled(Link)`\n  text-decoration: none;\n  color: black;\n  &:hover {\n    color: pink;\n  }\n`;\n\nexport const MovieInfo = styled.div`\n  padding: 10px;\n  font-size: 16px;\n`;","import PropTypes from 'prop-types';\nimport { useLocation } from 'react-router-dom';\nimport placeholder from '../../images/imdbnoimage.jpeg';\nimport {\n  QueryList,\n  QueryListItem,\n  QueryImage,\n  MovieLink,\n  MovieInfo,\n} from './Film.styled';\n\nexport default function Film({ movies }) {\n  const location = useLocation();\n\n  const stateData = {\n    backLocation: location,\n  };\n\n  return (\n    <QueryList>\n      {movies.map(({ id, title, img, vote_average }) => {\n        return (\n          <QueryListItem key={id}>\n            <MovieLink to={`/movies/${id}`} state={stateData}>\n              <QueryImage\n                src={\n                  img ? `https://image.tmdb.org/t/p/w500/${img}` : placeholder\n                }\n                alt={title}\n              />\n              <MovieInfo>\n                <h3>{title}</h3>\n                <p>Vote average: {vote_average}</p>\n              </MovieInfo>\n            </MovieLink>\n          </QueryListItem>\n        );\n      })}\n    </QueryList>\n  );\n}\n\nFilm.propTypes = {\n  movies: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.number.isRequired,\n      title: PropTypes.string.isRequired,\n      img: PropTypes.string,\n      vote_average: PropTypes.number,\n    })\n  ),\n};","import { useState, useEffect } from 'react';\nimport { Outlet } from 'react-router-dom';\nimport Search from 'components/Search';\nimport * as API from '../service/api';\nimport Film from 'components/Film';\n\nimport { useSearchParams } from 'react-router-dom';\n\nexport default function Movies() {\n  let [searchParams] = useSearchParams({});\n  const query = searchParams.get('query') ?? '';\n\n  const [movies, setMovies] = useState([]);\n\n  useEffect(() => {\n    if (query === '') {\n      return;\n    }\n    API.getMovieByQuery(query).then(({ results }) => {\n      const moviesArr = results.map(\n        ({ id, original_title, poster_path, backdrop_path, vote_average }) => ({\n          id,\n          title: original_title,\n          img: poster_path ?? backdrop_path,\n          vote_average,\n        })\n      );\n      setMovies(moviesArr);\n    });\n  }, [query]);\n\n  return (\n    <>\n      <Search />\n      {movies && <Film movies={movies} />}\n\n      <Outlet />\n    </>\n  );\n}","import axios from 'axios';\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3/';\nconst ApiKey = '71232cc02b0a0eb890148f92fc2f7287';\n\nexport async function getTrending() {\n  const response = await axios.get(`trending/all/day?api_key=${ApiKey}`);\n  return response.data;\n}\n\nexport async function getMovieDetails(id) {\n  const response = await axios.get(`movie/${id}?api_key=${ApiKey}`);\n  return response.data;\n}\n\nexport async function getMovieCast(id) {\n  const response = await axios.get(\n    `movie/${id}/credits?api_key=${ApiKey}&language=en-US`\n  );\n  return response.data;\n}\n\nexport async function getMovieReviews(id) {\n  const response = await axios.get(\n    `movie/${id}/reviews?api_key=${ApiKey}&language=en-US`\n  );\n  return response.data;\n}\n\nexport async function getMovieByQuery(query) {\n  const response = await axios.get(\n    `search/movie?api_key=${ApiKey}&query=${query}&page=1`\n  );\n  return response.data;\n}"],"names":["Button","styled","Input","Form","Search","useSearchParams","setSearchParams","useState","searchInput","setSearchInput","onSubmit","e","preventDefault","trim","query","Notiflix","type","value","autoComplete","autoFocus","onChange","target","toLowerCase","QueryList","QueryListItem","QueryImage","MovieLink","Link","MovieInfo","Film","movies","stateData","backLocation","useLocation","map","id","title","img","vote_average","to","state","src","placeholder","alt","Movies","get","setMovies","useEffect","API","then","moviesArr","results","original_title","poster_path","backdrop_path","axios","ApiKey","getTrending","response","data","getMovieDetails","getMovieCast","getMovieReviews","getMovieByQuery"],"sourceRoot":""}